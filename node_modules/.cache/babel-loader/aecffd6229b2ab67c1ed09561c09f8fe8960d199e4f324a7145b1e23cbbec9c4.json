{"ast":null,"code":"var _jsxFileName = \"/Users/zoe/Desktop/Independent/timer/my-app/src/pages/Timer.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDumbbell, faCirclePlay, faCirclePause, faRotateLeft } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = () => {\n  _s();\n  const [workTime, setWorkTime] = useState({\n    minutes: 0,\n    seconds: 0\n  });\n  const [restTime, setRestTime] = useState({\n    minutes: 0,\n    seconds: 0\n  });\n  const [sets, setSets] = useState(1);\n  const [currentSet, setCurrentSet] = useState(1);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isRest, setIsRest] = useState(false);\n\n  //fix moving num in input\n  const [workTimeSetting, setWorkTimeSetting] = useState({\n    minutes: 0,\n    seconds: 0\n  });\n  const [restTimeSetting, setRestTimeSetting] = useState({\n    minutes: 0,\n    seconds: 0\n  });\n  useEffect(() => {\n    if (!isRunning) return;\n    const timerId = setInterval(() => {\n      handleTick();\n    }, 1000);\n    return () => clearInterval(timerId);\n  }, [isRunning, isRest, workTime, restTime]);\n  const handleWorkTime = (minutes, seconds) => {\n    const totalSeconds = minutes * 60 + seconds;\n    setWorkTimeSetting({\n      minutes: Math.floor(totalSeconds / 60),\n      seconds: totalSeconds % 60\n    });\n  };\n  const handleRestTime = (minutes, seconds) => {\n    const totalSeconds = minutes * 60 + seconds;\n    setRestTimeSetting({\n      minutes: Math.floor(totalSeconds / 60),\n      seconds: totalSeconds % 60\n    });\n  };\n  const handleSets = num => {\n    setSets(num);\n  };\n  const handleReset = () => {\n    setIsRunning(false);\n    setCurrentSet(1);\n    setIsRest(false);\n    setWorkTime({\n      minutes: parseInt(document.getElementById(\"work-minutes\").value),\n      seconds: parseInt(document.getElementById(\"work-seconds\").value)\n    });\n    setRestTime({\n      minutes: parseInt(document.getElementById(\"rest-minutes\").value),\n      seconds: parseInt(document.getElementById(\"rest-seconds\").value)\n    });\n  };\n  const handleStart = () => {\n    setIsRunning(true);\n    if (isRest) {\n      setRestTime({\n        minutes: restTimeSetting.minutes,\n        seconds: restTimeSetting.seconds\n      });\n    } else {\n      setWorkTime({\n        minutes: workTimeSetting.minutes,\n        seconds: workTimeSetting.seconds\n      });\n    }\n  };\n  const handlePause = () => {\n    setIsRunning(false);\n  };\n  const handleTick = () => {\n    if (isRest) {\n      if (restTime.minutes === 0 && restTime.seconds === 0) {\n        if (currentSet === sets) {\n          setIsRunning(false);\n        } else {\n          setCurrentSet(currentSet + 1);\n          setIsRest(false);\n          handleStart();\n        }\n      } else if (restTime.seconds === 0) {\n        setRestTime({\n          minutes: restTime.minutes - 1,\n          seconds: 59\n        });\n      } else {\n        setRestTime({\n          ...restTime,\n          seconds: restTime.seconds - 1\n        });\n      }\n    } else {\n      if (workTime.minutes === 0 && workTime.seconds === 0) {\n        setIsRest(true);\n        if (currentSet === sets) {\n          setIsRunning(false);\n        } else {\n          handleStart();\n        }\n      } else if (workTime.seconds === 0) {\n        setWorkTime({\n          minutes: workTime.minutes - 1,\n          seconds: 59\n        });\n      } else {\n        setWorkTime({\n          ...workTime,\n          seconds: workTime.seconds - 1\n        });\n      }\n    }\n  };\n  const formatTime = timeObj => {\n    const {\n      minutes,\n      seconds\n    } = timeObj;\n    const formattedMinutes = minutes.toString().padStart(2, \"0\");\n    const formattedSeconds = seconds.toString().padStart(2, \"0\");\n    return `${formattedMinutes}:${formattedSeconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timerPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeDisplay\",\n        children: formatTime(isRest ? restTime : workTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faDumbbell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current\",\n        children: isRest ? \"Rest\" : \"Work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setsDisplay\",\n        children: `Set ${currentSet} of ${sets}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controlButtons\",\n        children: [isRunning ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCirclePause,\n          onClick: handlePause\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCirclePlay,\n          onClick: handleStart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faRotateLeft,\n          onClick: handleReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workTime\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Work\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          max: \"60\",\n          value: workTimeSetting.minutes,\n          onChange: e => {\n            const time = parseInt(e.target.value, 10);\n            handleWorkTime(time, workTimeSetting.seconds);\n          },\n          disabled: isRunning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          max: \"59\",\n          value: workTimeSetting.seconds,\n          onChange: e => {\n            const time = parseInt(e.target.value, 10);\n            handleWorkTime(workTimeSetting.minutes, time);\n          },\n          disabled: isRunning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restTime\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Rest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          max: \"60\",\n          value: restTimeSetting.minutes,\n          onChange: e => {\n            const time = parseInt(e.target.value, 10);\n            handleRestTime(time, restTimeSetting.seconds);\n          },\n          disabled: isRunning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          max: \"59\",\n          value: restTimeSetting.seconds,\n          onChange: e => {\n            const time = parseInt(e.target.value, 10);\n            handleRestTime(restTimeSetting.minutes, time);\n          },\n          disabled: isRunning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sets\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Sets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: \"20\",\n          value: sets,\n          onChange: e => {\n            const num = parseInt(e.target.value, 10);\n            handleSets(num);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n_s(Timer, \"oey1jkO+T7dz/m8jPotToNxpNe4=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useState","useEffect","FontAwesomeIcon","faDumbbell","faCirclePlay","faCirclePause","faRotateLeft","jsxDEV","_jsxDEV","Timer","_s","workTime","setWorkTime","minutes","seconds","restTime","setRestTime","sets","setSets","currentSet","setCurrentSet","isRunning","setIsRunning","isRest","setIsRest","workTimeSetting","setWorkTimeSetting","restTimeSetting","setRestTimeSetting","timerId","setInterval","handleTick","clearInterval","handleWorkTime","totalSeconds","Math","floor","handleRestTime","handleSets","num","handleReset","parseInt","document","getElementById","value","handleStart","handlePause","formatTime","timeObj","formattedMinutes","toString","padStart","formattedSeconds","className","children","fileName","_jsxFileName","lineNumber","columnNumber","icon","onClick","type","min","max","onChange","e","time","target","disabled","_c","$RefreshReg$"],"sources":["/Users/zoe/Desktop/Independent/timer/my-app/src/pages/Timer.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDumbbell, faCirclePlay, faCirclePause, faRotateLeft } from '@fortawesome/free-solid-svg-icons'\n\nconst Timer = () => {\n    const [workTime, setWorkTime] = useState({ minutes: 0, seconds: 0 });\n    const [restTime, setRestTime] = useState({ minutes: 0, seconds: 0 });\n    const [sets, setSets] = useState(1);\n    const [currentSet, setCurrentSet] = useState(1);\n    const [isRunning, setIsRunning] = useState(false);\n    const [isRest, setIsRest] = useState(false);\n\n    //fix moving num in input\n    const [workTimeSetting, setWorkTimeSetting] = useState({ minutes: 0, seconds: 0 });\n    const [restTimeSetting, setRestTimeSetting] = useState({ minutes: 0, seconds: 0 });\n\n\n    useEffect(() => {\n        if (!isRunning) return;\n        const timerId = setInterval(() => {\n          handleTick();\n        }, 1000);\n        return () => clearInterval(timerId);\n      }, [isRunning, isRest, workTime, restTime]);\n      \n\n\n      const handleWorkTime = (minutes, seconds) => {\n        const totalSeconds = minutes * 60 + seconds;\n        setWorkTimeSetting({ minutes: Math.floor(totalSeconds / 60), seconds: totalSeconds % 60 });\n      };\n      \n      const handleRestTime = (minutes, seconds) => {\n        const totalSeconds = minutes * 60 + seconds;\n        setRestTimeSetting({ minutes: Math.floor(totalSeconds / 60), seconds: totalSeconds % 60 });\n      };\n      \n           \n      \n    const handleSets = (num) => {\n        setSets(num);\n    };\n\n    const handleReset = () => {\n        setIsRunning(false);\n        setCurrentSet(1);\n        setIsRest(false);\n        setWorkTime({ minutes: parseInt(document.getElementById(\"work-minutes\").value), seconds: parseInt(document.getElementById(\"work-seconds\").value)});\n        setRestTime({ minutes: parseInt(document.getElementById(\"rest-minutes\").value), seconds: parseInt(document.getElementById(\"rest-seconds\").value)});\n      };\n      \n\n      const handleStart = () => {\n        setIsRunning(true);\n        if (isRest) {\n          setRestTime({ minutes: restTimeSetting.minutes, seconds: restTimeSetting.seconds });\n        } else {\n          setWorkTime({ minutes: workTimeSetting.minutes, seconds: workTimeSetting.seconds });\n        }\n      };\n      \n    \n\n    const handlePause = () => {\n        setIsRunning(false);\n    };\n\n\n    const handleTick = () => {\n        if (isRest) {\n          if (restTime.minutes === 0 && restTime.seconds === 0) {\n            if (currentSet === sets) {\n              setIsRunning(false);\n            } else {\n              setCurrentSet(currentSet + 1);\n              setIsRest(false);\n              handleStart();\n            }\n          } else if (restTime.seconds === 0) {\n            setRestTime({ minutes: restTime.minutes - 1, seconds: 59 });\n          } else {\n            setRestTime({ ...restTime, seconds: restTime.seconds - 1 });\n          }\n        } else {\n          if (workTime.minutes === 0 && workTime.seconds === 0) {\n            setIsRest(true);\n            if (currentSet === sets) {\n              setIsRunning(false);\n            } else {\n              handleStart();\n            }\n          } else if (workTime.seconds === 0) {\n            setWorkTime({ minutes: workTime.minutes - 1, seconds: 59 });\n          } else {\n            setWorkTime({ ...workTime, seconds: workTime.seconds - 1 });\n          }\n        }\n      };\n\n    const formatTime = (timeObj) => {\n        const { minutes, seconds } = timeObj;\n        const formattedMinutes = minutes.toString().padStart(2, \"0\");\n        const formattedSeconds = seconds.toString().padStart(2, \"0\");\n        return `${formattedMinutes}:${formattedSeconds}`;\n      };\n      \n      \n    return (\n        <div className=\"timerPage\">\n            <div className=\"timer\">\n\n                <div className=\"timeDisplay\">{formatTime(isRest ? restTime : workTime)}</div>\n\n                <FontAwesomeIcon icon={faDumbbell} />\n\n\n                <div className=\"current\">{isRest ? \"Rest\" : \"Work\"}</div>\n                <div className=\"setsDisplay\">{`Set ${currentSet} of ${sets}`}</div> \n\n                <div className=\"controlButtons\">\n                    {isRunning ? (\n                        <FontAwesomeIcon icon={faCirclePause} onClick={handlePause} />\n                    ) : (\n                        <FontAwesomeIcon icon={faCirclePlay} onClick={handleStart} />\n                    )}\n                    <FontAwesomeIcon icon={faRotateLeft} onClick={handleReset} />\n                </div>\n            </div>\n            <div className=\"settings\">\n                <div className=\"workTime\">\n                    <label>Work</label>\n\n                    \n                    <input type=\"number\" min=\"0\" max=\"60\" \n                      value={workTimeSetting.minutes}\n                      onChange={(e) => {\n                          const time = parseInt(e.target.value, 10);\n                          handleWorkTime(time, workTimeSetting.seconds);\n                      }} \n                      disabled={isRunning}\n                    />\n\n                    <input type=\"number\" min=\"0\" max=\"59\" \n                      value={workTimeSetting.seconds}\n                      onChange={(e) => {\n                          const time = parseInt(e.target.value, 10);\n                          handleWorkTime(workTimeSetting.minutes, time);\n                      }} \n                      disabled={isRunning}\n                    />\n\n\n                </div>\n                <div className=\"restTime\">\n                    <label>Rest</label>\n\n                    \n                    <input type=\"number\" min=\"0\" max=\"60\"\n                      value={restTimeSetting.minutes}\n                      onChange={(e) => {\n                          const time = parseInt(e.target.value, 10);\n                          handleRestTime(time, restTimeSetting.seconds);\n                      }} \n                      disabled={isRunning}\n                    />\n\n                    <input type=\"number\" min=\"0\" max=\"59\" \n                      value={restTimeSetting.seconds}\n                      onChange={(e) => {\n                          const time = parseInt(e.target.value, 10);\n                          handleRestTime(restTimeSetting.minutes, time);\n                      }} \n                      disabled={isRunning}\n                    />\n\n                </div>\n                <div className=\"sets\">\n                    <label>Sets</label>\n\n                    <input type=\"number\"\n                        min=\"1\"\n                        max=\"20\"\n                        value={sets}\n                        onChange={(e) => {\n                            const num = parseInt(e.target.value, 10);\n                            handleSets(num);\n                        }} />\n                </div>\n              </div>\n          </div>\n    );\n};\n\nexport default Timer;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}