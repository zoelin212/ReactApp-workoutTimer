{"ast":null,"code":"var _jsxFileName = \"/Users/zoe/Desktop/Independent/timer/my-app/src/pages/Timer.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDumbbell, faCirclePlay, faCirclePause, faRotateLeft } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = () => {\n  _s();\n  const [workTime, setWorkTime] = useState({\n    minutes: 0,\n    seconds: 0\n  });\n  const [restTime, setRestTime] = useState({\n    minutes: 0,\n    seconds: 0\n  });\n  const [sets, setSets] = useState(1);\n  const [currentSet, setCurrentSet] = useState(1);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isRest, setIsRest] = useState(false);\n  const [currentTime, setCurrentTime] = useState({\n    minutes: 0,\n    seconds: 0\n  });\n  useEffect(() => {\n    if (!isRunning) return;\n    const intervalId = setInterval(() => {\n      setCurrentTime(prevTime => {\n        if (prevTime.minutes === 0 && prevTime.seconds === 0) {\n          setIsRest(prevIsRest => {\n            if (prevIsRest) {\n              if (currentSet === sets) {\n                setIsRunning(false);\n                return prevTime;\n              } else {\n                setCurrentSet(prevSet => prevSet + 1);\n                return {\n                  ...workTime\n                };\n              }\n            } else {\n              return {\n                ...restTime\n              };\n            }\n          });\n        } else if (prevTime.seconds === 0) {\n          return {\n            minutes: prevTime.minutes - 1,\n            seconds: 59\n          };\n        } else {\n          return {\n            ...prevTime,\n            seconds: prevTime.seconds - 1\n          };\n        }\n      });\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [isRunning, isRest, currentSet, sets, workTime, restTime]);\n  const handleWorkTime = (minutes, seconds) => {\n    const totalSeconds = minutes * 60 + seconds;\n    setWorkTime({\n      minutes: Math.floor(totalSeconds / 60),\n      seconds: totalSeconds % 60\n    });\n  };\n  const handleRestTime = (minutes, seconds) => {\n    const totalSeconds = minutes * 60 + seconds;\n    setRestTime({\n      minutes: Math.floor(totalSeconds / 60),\n      seconds: totalSeconds % 60\n    });\n  };\n  const handleSets = num => {\n    setSets(Math.min(Math.max(num, 1), 20));\n  };\n  const handleReset = () => {\n    setIsRunning(false);\n    setCurrentSet(1);\n    setIsRest(false);\n    setWorkTime({\n      minutes: parseInt(document.getElementById(\"work-minutes\").value),\n      seconds: parseInt(document.getElementById(\"work-seconds\").value)\n    });\n    setRestTime({\n      minutes: parseInt(document.getElementById(\"rest-minutes\").value),\n      seconds: parseInt(document.getElementById(\"rest-seconds\").value)\n    });\n  };\n  const handleStart = () => {\n    setIsRunning(true);\n    setIsRest(false);\n  };\n  const handlePause = () => {\n    setIsRunning(false);\n  };\n  const handleTick = () => {\n    if (isRest) {\n      if (restTime.minutes === 0 && restTime.seconds === 0) {\n        if (currentSet === sets) {\n          setIsRunning(false);\n        } else {\n          setCurrentSet(currentSet + 1);\n          setIsRest(false);\n        }\n      } else if (restTime.seconds === 0) {\n        setRestTime({\n          minutes: restTime.minutes - 1,\n          seconds: 59\n        });\n      } else {\n        setRestTime({\n          ...restTime,\n          seconds: restTime.seconds - 1\n        });\n      }\n    } else {\n      if (workTime.minutes === 0 && workTime.seconds === 0) {\n        setIsRest(true);\n        if (currentSet === sets) {\n          setIsRunning(false);\n        }\n      } else if (workTime.seconds === 0) {\n        setWorkTime({\n          minutes: workTime.minutes - 1,\n          seconds: 59\n        });\n      } else {\n        setWorkTime({\n          ...workTime,\n          seconds: workTime.seconds - 1\n        });\n      }\n    }\n  };\n  const formatTime = timeObj => {\n    const {\n      minutes,\n      seconds\n    } = timeObj;\n    const formattedMinutes = minutes.toString().padStart(2, \"0\");\n    const formattedSeconds = seconds.toString().padStart(2, \"0\");\n    return `${formattedMinutes}:${formattedSeconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timerPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeDisplay\",\n        children: formatTime(isRest ? restTime : workTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faDumbbell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current\",\n        children: isRest ? \"Rest\" : \"Work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setsDisplay\",\n        children: `Set ${currentSet} of ${sets}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controlButtons\",\n        children: [isRunning ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCirclePause,\n          onClick: handlePause\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCirclePlay,\n          onClick: handleStart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faRotateLeft,\n          onClick: handleReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workTime\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Work\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          max: \"60\",\n          value: workTime.minutes,\n          onChange: e => {\n            const time = parseInt(e.target.value, 10);\n            handleWorkTime(time, workTime.seconds);\n          },\n          disabled: isRunning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          max: \"59\",\n          value: workTime.seconds,\n          onChange: e => {\n            const time = parseInt(e.target.value, 10);\n            handleWorkTime(workTime.minutes, time);\n          },\n          disabled: isRunning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restTime\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Rest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          max: \"60\",\n          value: restTime.minutes,\n          onChange: e => {\n            const time = parseInt(e.target.value, 10);\n            handleRestTime(time, restTime.seconds);\n          },\n          disabled: isRunning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          max: \"59\",\n          value: restTime.seconds,\n          onChange: e => {\n            const time = parseInt(e.target.value, 10);\n            handleRestTime(restTime.minutes, time);\n          },\n          disabled: isRunning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sets\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Sets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: \"20\",\n          value: sets,\n          onChange: e => {\n            const num = parseInt(e.target.value, 10);\n            handleSets(num);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n};\n_s(Timer, \"CtFkslBxLHMDM67VC1UbVO8l6z4=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useState","useEffect","FontAwesomeIcon","faDumbbell","faCirclePlay","faCirclePause","faRotateLeft","jsxDEV","_jsxDEV","Timer","_s","workTime","setWorkTime","minutes","seconds","restTime","setRestTime","sets","setSets","currentSet","setCurrentSet","isRunning","setIsRunning","isRest","setIsRest","currentTime","setCurrentTime","intervalId","setInterval","prevTime","prevIsRest","prevSet","clearInterval","handleWorkTime","totalSeconds","Math","floor","handleRestTime","handleSets","num","min","max","handleReset","parseInt","document","getElementById","value","handleStart","handlePause","handleTick","formatTime","timeObj","formattedMinutes","toString","padStart","formattedSeconds","className","children","fileName","_jsxFileName","lineNumber","columnNumber","icon","onClick","type","onChange","e","time","target","disabled","_c","$RefreshReg$"],"sources":["/Users/zoe/Desktop/Independent/timer/my-app/src/pages/Timer.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDumbbell, faCirclePlay, faCirclePause, faRotateLeft } from '@fortawesome/free-solid-svg-icons'\n\nconst Timer = () => {\n    const [workTime, setWorkTime] = useState({ minutes: 0, seconds: 0 });\n    const [restTime, setRestTime] = useState({ minutes: 0, seconds: 0 });\n    const [sets, setSets] = useState(1);\n    const [currentSet, setCurrentSet] = useState(1);\n    const [isRunning, setIsRunning] = useState(false);\n    const [isRest, setIsRest] = useState(false);\n    const [currentTime, setCurrentTime] = useState({ minutes: 0, seconds: 0 });\n\n\n    useEffect(() => {\n        if (!isRunning) return;\n\n        const intervalId = setInterval(() => {\n            setCurrentTime((prevTime) => {\n                if (prevTime.minutes === 0 && prevTime.seconds === 0) {\n                    setIsRest((prevIsRest) => {\n                        if (prevIsRest) {\n                            if (currentSet === sets) {\n                                setIsRunning(false);\n                                return prevTime;\n                            } else {\n                                setCurrentSet((prevSet) => prevSet + 1);\n                                return { ...workTime };\n                            }\n                        } else {\n                            return { ...restTime };\n                        }\n                    });\n                } else if (prevTime.seconds === 0) {\n                    return { minutes: prevTime.minutes - 1, seconds: 59 };\n                } else {\n                    return { ...prevTime, seconds: prevTime.seconds - 1 };\n                }\n            });\n        }, 1000);\n\n        return () => clearInterval(intervalId);\n    }, [isRunning, isRest, currentSet, sets, workTime, restTime]);\n\n\n    const handleWorkTime = (minutes, seconds) => {\n        const totalSeconds = minutes * 60 + seconds;\n        setWorkTime({ minutes: Math.floor(totalSeconds / 60), seconds: totalSeconds % 60 });\n    };\n    \n    const handleRestTime = (minutes, seconds) => {\n        const totalSeconds = minutes * 60 + seconds;\n        setRestTime({ minutes: Math.floor(totalSeconds / 60), seconds: totalSeconds % 60 });\n    };\n           \n      \n    const handleSets = (num) => {\n        setSets(Math.min(Math.max(num, 1), 20));\n    };\n\n    const handleReset = () => {\n        setIsRunning(false);\n        setCurrentSet(1);\n        setIsRest(false);\n        setWorkTime({ minutes: parseInt(document.getElementById(\"work-minutes\").value), seconds: parseInt(document.getElementById(\"work-seconds\").value)});\n        setRestTime({ minutes: parseInt(document.getElementById(\"rest-minutes\").value), seconds: parseInt(document.getElementById(\"rest-seconds\").value)});\n    };\n      \n\n    const handleStart = () => {\n        setIsRunning(true);\n        setIsRest(false);\n    };\n      \n\n    const handlePause = () => {\n        setIsRunning(false);\n    };\n\n\n    const handleTick = () => {\n        if (isRest) {\n          if (restTime.minutes === 0 && restTime.seconds === 0) {\n            if (currentSet === sets) {\n              setIsRunning(false);\n            } else {\n              setCurrentSet(currentSet + 1);\n              setIsRest(false);\n            }\n          } else if (restTime.seconds === 0) {\n            setRestTime({ minutes: restTime.minutes - 1, seconds: 59 });\n          } else {\n            setRestTime({ ...restTime, seconds: restTime.seconds - 1 });\n          }\n        } else {\n          if (workTime.minutes === 0 && workTime.seconds === 0) {\n            setIsRest(true);\n            if (currentSet === sets) {\n              setIsRunning(false);\n            }\n          } else if (workTime.seconds === 0) {\n            setWorkTime({ minutes: workTime.minutes - 1, seconds: 59 });\n          } else {\n            setWorkTime({ ...workTime, seconds: workTime.seconds - 1 });\n          }\n        }\n      };\n      \n      \n\n    const formatTime = (timeObj) => {\n        const { minutes, seconds } = timeObj;\n        const formattedMinutes = minutes.toString().padStart(2, \"0\");\n        const formattedSeconds = seconds.toString().padStart(2, \"0\");\n        return `${formattedMinutes}:${formattedSeconds}`;\n      };\n      \n      \n\n    return (\n        <div className=\"timerPage\">\n            <div className=\"timer\">\n                {/* 將時間格式化為 00:00 的形式 */}\n                <div className=\"timeDisplay\">{formatTime(isRest ? restTime : workTime)}</div>\n\n                <FontAwesomeIcon icon={faDumbbell} />\n\n                {/* 修正錯誤：顯示目前正在倒數的是 work 還是 rest */}\n                <div className=\"current\">{isRest ? \"Rest\" : \"Work\"}</div>\n                <div className=\"setsDisplay\">{`Set ${currentSet} of ${sets}`}</div> \n\n                <div className=\"controlButtons\">\n                    {isRunning ? (\n                        <FontAwesomeIcon icon={faCirclePause} onClick={handlePause} />\n                    ) : (\n                        <FontAwesomeIcon icon={faCirclePlay} onClick={handleStart} />\n                    )}\n                    <FontAwesomeIcon icon={faRotateLeft} onClick={handleReset} />\n                </div>\n            </div>\n            <div className=\"settings\">\n                <div className=\"workTime\">\n                    <label>Work</label>\n\n                    \n                    <input type=\"number\" min=\"0\" max=\"60\" \n                    value={workTime.minutes}\n                    onChange={(e) => {\n                        const time = parseInt(e.target.value, 10);\n                        handleWorkTime(time, workTime.seconds);\n                    }} \n                    disabled={isRunning}\n                    />\n\n                    <input type=\"number\" min=\"0\" max=\"59\" \n                    value={workTime.seconds}\n                    onChange={(e) => {\n                        const time = parseInt(e.target.value, 10);\n                        handleWorkTime(workTime.minutes, time);\n                    }} \n                    disabled={isRunning}\n                    />\n\n\n                </div>\n                <div className=\"restTime\">\n                    <label>Rest</label>\n\n                    \n                    <input type=\"number\" min=\"0\" max=\"60\"\n                    value={restTime.minutes}\n                    onChange={(e) => {\n                        const time = parseInt(e.target.value, 10);\n                        handleRestTime(time, restTime.seconds);\n                    }} \n                    disabled={isRunning}\n                    />\n                   \n                    <input type=\"number\" min=\"0\" max=\"59\" \n                    value={restTime.seconds}\n                    onChange={(e) => {\n                        const time = parseInt(e.target.value, 10);\n                        handleRestTime(restTime.minutes, time);\n                    }} \n                    disabled={isRunning}\n                    />\n                </div>\n                <div className=\"sets\">\n                    <label>Sets</label>\n\n                    <input type=\"number\"\n                        min=\"1\"\n                        max=\"20\"\n                        value={sets}\n                        onChange={(e) => {\n                            const num = parseInt(e.target.value, 10);\n                            handleSets(num);\n                        }} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Timer;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}