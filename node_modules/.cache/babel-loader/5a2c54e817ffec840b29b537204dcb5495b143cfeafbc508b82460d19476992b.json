{"ast":null,"code":"var _jsxFileName = \"/Users/zoe/Desktop/Independent/timer/my-app/src/components/MonthlyBarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Bar } from \"react-chartjs-2\";\nimport { get_date_range } from \"../utils/dateUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MonthlyBarChart = () => {\n  _s();\n  const [monthData, setMonthData] = useState({});\n  const [email, setEmail] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      const storedEmail = localStorage.getItem(\"email\");\n      if (!storedEmail) {\n        console.error(\"Email not found in local storage\");\n        return;\n      }\n      setEmail(storedEmail);\n      const result = await axios.post(\"https://www.zoelindev.com/timer/API/bar.php\", {\n        email: storedEmail\n      });\n      setMonthData(result.data.monthData);\n    };\n    fetchData();\n  }, []);\n  const monthlyDataLabels = get_date_range(new Date(new Date().getFullYear(), new Date().getMonth(), 1).toISOString().split(\"T\")[0], new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0).toISOString().split(\"T\")[0]);\n  const monthlyDataValues = Array.from(Array(monthlyDataLabels.length), () => 0);\n\n  // Generate random colors for each day\n  const backgroundColors = monthlyDataLabels.map(() => {\n    const red = Math.floor(Math.random() * 255);\n    const green = Math.floor(Math.random() * 255);\n    const blue = Math.floor(Math.random() * 255);\n    return `rgba(${red}, ${green}, ${blue}, 0.2)`;\n  });\n  Object.keys(monthData).forEach(key => {\n    const index = monthlyDataLabels.indexOf(key);\n    monthlyDataValues[index] = monthData[key];\n  });\n  const monthlyChartData = {\n    labels: monthlyDataLabels,\n    datasets: [{\n      label: \"Month\",\n      data: monthlyDataValues,\n      backgroundColor: backgroundColors,\n      borderColor: backgroundColors.map(color => color.replace(\"0.2\", \"1\")),\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Monthly Exercise Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: monthlyChartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(MonthlyBarChart, \"rC7dSOi+EU6M4/XbBbNddwIFb3U=\");\n_c = MonthlyBarChart;\nexport default MonthlyBarChart;\nvar _c;\n$RefreshReg$(_c, \"MonthlyBarChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","Bar","get_date_range","jsxDEV","_jsxDEV","MonthlyBarChart","_s","monthData","setMonthData","email","setEmail","fetchData","storedEmail","localStorage","getItem","console","error","result","post","data","monthlyDataLabels","Date","getFullYear","getMonth","toISOString","split","monthlyDataValues","Array","from","length","backgroundColors","map","red","Math","floor","random","green","blue","Object","keys","forEach","key","index","indexOf","monthlyChartData","labels","datasets","label","backgroundColor","borderColor","color","replace","borderWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zoe/Desktop/Independent/timer/my-app/src/components/MonthlyBarChart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Bar } from \"react-chartjs-2\";\nimport { get_date_range } from \"../utils/dateUtils\";\n\nconst MonthlyBarChart = () => {\n  const [monthData, setMonthData] = useState({});\n  const [email, setEmail] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const storedEmail = localStorage.getItem(\"email\");\n      if (!storedEmail) {\n        console.error(\"Email not found in local storage\");\n        return;\n      }\n\n      setEmail(storedEmail);\n\n      const result = await axios.post(\n        \"https://www.zoelindev.com/timer/API/bar.php\",\n        {\n          email: storedEmail,\n        }\n      );\n      setMonthData(result.data.monthData);\n    };\n\n    fetchData();\n  }, []);\n\n  const monthlyDataLabels = get_date_range(\n    new Date(new Date().getFullYear(), new Date().getMonth(), 1).toISOString().split(\"T\")[0],\n    new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0).toISOString().split(\"T\")[0]\n  );\n  const monthlyDataValues = Array.from(Array(monthlyDataLabels.length), () => 0);\n\n  // Generate random colors for each day\n  const backgroundColors = monthlyDataLabels.map(() => {\n    const red = Math.floor(Math.random() * 255);\n    const green = Math.floor(Math.random() * 255);\n    const blue = Math.floor(Math.random() * 255);\n    return `rgba(${red}, ${green}, ${blue}, 0.2)`;\n  });\n\n  Object.keys(monthData).forEach((key) => {\n    const index = monthlyDataLabels.indexOf(key);\n    monthlyDataValues[index] = monthData[key];\n  });\n\n  const monthlyChartData = {\n    labels: monthlyDataLabels,\n    datasets: [\n      {\n        label: \"Month\",\n        data: monthlyDataValues,\n        backgroundColor: backgroundColors,\n        borderColor: backgroundColors.map((color) => color.replace(\"0.2\", \"1\")),\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <h2>Monthly Exercise Time</h2>\n      <Bar data={monthlyChartData} />\n    </div>\n  );\n};\n\nexport default MonthlyBarChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}